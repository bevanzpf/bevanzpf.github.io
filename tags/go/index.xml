<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on nautilis&#39; blog</title>
    <link>/tags/go/</link>
    <description>Recent content in Go on nautilis&#39; blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Nov 2020 14:49:54 +0800</lastBuildDate>
    
	<atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go-redis/redis 源码学习</title>
      <link>/posts/go-redis-source-code-learning/</link>
      <pubDate>Thu, 19 Nov 2020 14:49:54 +0800</pubDate>
      
      <guid>/posts/go-redis-source-code-learning/</guid>
      <description>项目上大量使用Redis做缓存，前阵子还因为go-redis这个客户端的一些默认配置踩了些坑，所以决定抽出时间读读它的源码，好好了解一下一些关键功能（例如：连接池，redis命令）的实现。 主要结构图 整</description>
    </item>
    
    <item>
      <title>go generate 实战☞数据表实体生成器</title>
      <link>/posts/golang-generate-entity/</link>
      <pubDate>Fri, 13 Nov 2020 20:21:00 +0800</pubDate>
      
      <guid>/posts/golang-generate-entity/</guid>
      <description>go generate 是 go 1.4版本新增的一个特性，用于在编译前通过命令自动生成代码，例如官方提供的stringer（golang.org/x/tools/cmd/stringer）。该注释只在.go源文件中生效，并且</description>
    </item>
    
    <item>
      <title>bilibili/discovery 源码解析</title>
      <link>/posts/learn-discovery-source-code/</link>
      <pubDate>Sat, 29 Aug 2020 11:14:10 +0800</pubDate>
      
      <guid>/posts/learn-discovery-source-code/</guid>
      <description>前阵子看了关于B站微服务化的视频分享，对其中讲到的服务发现相关的知识印象深刻，后面发现这个组件是开源的, 于是随手clone下来学习一下。discovery 是B站主站使用的服务注册/发现组件, 其设计参考</description>
    </item>
    
    <item>
      <title>徒手撸一个分布式id生成器</title>
      <link>/posts/gen-unique-by-redis/</link>
      <pubDate>Sat, 15 Aug 2020 11:25:06 +0800</pubDate>
      
      <guid>/posts/gen-unique-by-redis/</guid>
      <description>在大型业务系统中我们常常需要对数据库进行分库分表处理，此时数据的唯一标识无法再通过依赖数据库唯一键的方式实现，因此我们需要一个id服务负责分配唯一id。分布式id生成器在如今已经是再寻常不过的需求，业</description>
    </item>
    
  </channel>
</rss>